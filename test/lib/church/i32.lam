@include "lib/church/bin.lam"

# 32-bit accessors
let b0I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b0)
let b1I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b1)
let b2I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b2)
let b3I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b3)
let b4I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b4)
let b5I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b5)
let b6I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b6)
let b7I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b7)
let b8I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b8)
let b9I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b9)
let b10I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b10)
let b11I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b11)
let b12I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b12)
let b13I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b13)
let b14I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b14)
let b15I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b15)
let b16I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b16)
let b17I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b17)
let b18I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b18)
let b19I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b19)
let b20I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b20)
let b21I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b21)
let b22I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b22)
let b23I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b23)
let b24I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b24)
let b25I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b25)
let b26I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b26)
let b27I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b27)
let b28I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b28)
let b29I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b29)
let b30I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b30)
let b31I32 = \n. n (\b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0. b31)

# 32-bit Carry Lookahead Full Adder
let cla32 = \A. \B. \C0.
    let A0 = b0I32 A in
    let A1 = b1I32 A in
    let A2 = b2I32 A in
    let A3 = b3I32 A in
    let A4 = b4I32 A in
    let A5 = b5I32 A in
    let A6 = b6I32 A in
    let A7 = b7I32 A in
    let A8 = b8I32 A in
    let A9 = b9I32 A in
    let A10 = b10I32 A in
    let A11 = b11I32 A in
    let A12 = b12I32 A in
    let A13 = b13I32 A in
    let A14 = b14I32 A in
    let A15 = b15I32 A in
    let A16 = b16I32 A in
    let A17 = b17I32 A in
    let A18 = b18I32 A in
    let A19 = b19I32 A in
    let A20 = b20I32 A in
    let A21 = b21I32 A in
    let A22 = b22I32 A in
    let A23 = b23I32 A in
    let A24 = b24I32 A in
    let A25 = b25I32 A in
    let A26 = b26I32 A in
    let A27 = b27I32 A in
    let A28 = b28I32 A in
    let A29 = b29I32 A in
    let A30 = b30I32 A in
    let A31 = b31I32 A in
    let B0 = b0I32 B in
    let B1 = b1I32 B in
    let B2 = b2I32 B in
    let B3 = b3I32 B in
    let B4 = b4I32 B in
    let B5 = b5I32 B in
    let B6 = b6I32 B in
    let B7 = b7I32 B in
    let B8 = b8I32 B in
    let B9 = b9I32 B in
    let B10 = b10I32 B in
    let B11 = b11I32 B in
    let B12 = b12I32 B in
    let B13 = b13I32 B in
    let B14 = b14I32 B in
    let B15 = b15I32 B in
    let B16 = b16I32 B in
    let B17 = b17I32 B in
    let B18 = b18I32 B in
    let B19 = b19I32 B in
    let B20 = b20I32 B in
    let B21 = b21I32 B in
    let B22 = b22I32 B in
    let B23 = b23I32 B in
    let B24 = b24I32 B in
    let B25 = b25I32 B in
    let B26 = b26I32 B in
    let B27 = b27I32 B in
    let B28 = b28I32 B in
    let B29 = b29I32 B in
    let B30 = b30I32 B in
    let B31 = b31I32 B in
    let P0 = xor A0 B0 in
    let P1 = xor A1 B1 in
    let P2 = xor A2 B2 in
    let P3 = xor A3 B3 in
    let P4 = xor A4 B4 in
    let P5 = xor A5 B5 in
    let P6 = xor A6 B6 in
    let P7 = xor A7 B7 in
    let P8 = xor A8 B8 in
    let P9 = xor A9 B9 in
    let P10 = xor A10 B10 in
    let P11 = xor A11 B11 in
    let P12 = xor A12 B12 in
    let P13 = xor A13 B13 in
    let P14 = xor A14 B14 in
    let P15 = xor A15 B15 in
    let P16 = xor A16 B16 in
    let P17 = xor A17 B17 in
    let P18 = xor A18 B18 in
    let P19 = xor A19 B19 in
    let P20 = xor A20 B20 in
    let P21 = xor A21 B21 in
    let P22 = xor A22 B22 in
    let P23 = xor A23 B23 in
    let P24 = xor A24 B24 in
    let P25 = xor A25 B25 in
    let P26 = xor A26 B26 in
    let P27 = xor A27 B27 in
    let P28 = xor A28 B28 in
    let P29 = xor A29 B29 in
    let P30 = xor A30 B30 in
    let P31 = xor A31 B31 in
    let G0 = and A0 B0 in
    let G1 = and A1 B1 in
    let G2 = and A2 B2 in
    let G3 = and A3 B3 in
    let G4 = and A4 B4 in
    let G5 = and A5 B5 in
    let G6 = and A6 B6 in
    let G7 = and A7 B7 in
    let G8 = and A8 B8 in
    let G9 = and A9 B9 in
    let G10 = and A10 B10 in
    let G11 = and A11 B11 in
    let G12 = and A12 B12 in
    let G13 = and A13 B13 in
    let G14 = and A14 B14 in
    let G15 = and A15 B15 in
    let G16 = and A16 B16 in
    let G17 = and A17 B17 in
    let G18 = and A18 B18 in
    let G19 = and A19 B19 in
    let G20 = and A20 B20 in
    let G21 = and A21 B21 in
    let G22 = and A22 B22 in
    let G23 = and A23 B23 in
    let G24 = and A24 B24 in
    let G25 = and A25 B25 in
    let G26 = and A26 B26 in
    let G27 = and A27 B27 in
    let G28 = and A28 B28 in
    let G29 = and A29 B29 in
    let G30 = and A30 B30 in
    let G31 = and A31 B31 in
    let C1 = or G0 (and P0 C0) in
    let C2 = or G1 (and P1 C1) in
    let C3 = or G2 (and P2 C2) in
    let C4 = or G3 (and P3 C3) in
    let C5 = or G4 (and P4 C4) in
    let C6 = or G5 (and P5 C5) in
    let C7 = or G6 (and P6 C6) in
    let C8 = or G7 (and P7 C7) in
    let C9 = or G8 (and P8 C8) in
    let C10 = or G9 (and P9 C9) in
    let C11 = or G10 (and P10 C10) in
    let C12 = or G11 (and P11 C11) in
    let C13 = or G12 (and P12 C12) in
    let C14 = or G13 (and P13 C13) in
    let C15 = or G14 (and P14 C14) in
    let C16 = or G15 (and P15 C15) in
    let C17 = or G16 (and P16 C16) in
    let C18 = or G17 (and P17 C17) in
    let C19 = or G18 (and P18 C18) in
    let C20 = or G19 (and P19 C19) in
    let C21 = or G20 (and P20 C20) in
    let C22 = or G21 (and P21 C21) in
    let C23 = or G22 (and P22 C22) in
    let C24 = or G23 (and P23 C23) in
    let C25 = or G24 (and P24 C24) in
    let C26 = or G25 (and P25 C25) in
    let C27 = or G26 (and P26 C26) in
    let C28 = or G27 (and P27 C27) in
    let C29 = or G28 (and P28 C28) in
    let C30 = or G29 (and P29 C29) in
    let C31 = or G30 (and P30 C30) in
    let C32 = or G31 (and P31 C31) in
    let S0 = xor P0 C0 in
    let S1 = xor P1 C1 in
    let S2 = xor P2 C2 in
    let S3 = xor P3 C3 in
    let S4 = xor P4 C4 in
    let S5 = xor P5 C5 in
    let S6 = xor P6 C6 in
    let S7 = xor P7 C7 in
    let S8 = xor P8 C8 in
    let S9 = xor P9 C9 in
    let S10 = xor P10 C10 in
    let S11 = xor P11 C11 in
    let S12 = xor P12 C12 in
    let S13 = xor P13 C13 in
    let S14 = xor P14 C14 in
    let S15 = xor P15 C15 in
    let S16 = xor P16 C16 in
    let S17 = xor P17 C17 in
    let S18 = xor P18 C18 in
    let S19 = xor P19 C19 in
    let S20 = xor P20 C20 in
    let S21 = xor P21 C21 in
    let S22 = xor P22 C22 in
    let S23 = xor P23 C23 in
    let S24 = xor P24 C24 in
    let S25 = xor P25 C25 in
    let S26 = xor P26 C26 in
    let S27 = xor P27 C27 in
    let S28 = xor P28 C28 in
    let S29 = xor P29 C29 in
    let S30 = xor P30 C30 in
    let S31 = xor P31 C31 in
    let sum = \f. f S31 S30 S29 S28 S27 S26 S25 S24 S23 S22 S21 S20 S19 S18 S17 S16 S15 S14 S13 S12 S11 S10 S9 S8 S7 S6 S5 S4 S3 S2 S1 S0 in
    pair sum C32

let addI32 = \A. \B. cla32 A B fls

let i32ToChurchNat = \N.
    let N0 = b0I32 N in
    let N1 = b1I32 N in
    let N2 = b2I32 N in
    let N3 = b3I32 N in
    let N4 = b4I32 N in
    let N5 = b5I32 N in
    let N6 = b6I32 N in
    let N7 = b7I32 N in
    let N8 = b8I32 N in
    let N9 = b9I32 N in
    let N10 = b10I32 N in
    let N11 = b11I32 N in
    let N12 = b12I32 N in
    let N13 = b13I32 N in
    let N14 = b14I32 N in
    let N15 = b15I32 N in
    let N16 = b16I32 N in
    let N17 = b17I32 N in
    let N18 = b18I32 N in
    let N19 = b19I32 N in
    let N20 = b20I32 N in
    let N21 = b21I32 N in
    let N22 = b22I32 N in
    let N23 = b23I32 N in
    let N24 = b24I32 N in
    let N25 = b25I32 N in
    let N26 = b26I32 N in
    let N27 = b27I32 N in
    let N28 = b28I32 N in
    let N29 = b29I32 N in
    let N30 = b30I32 N in
    let N31 = b31I32 N in
    let n0 = bitToChurchNat N0 in
    let n1 = times c2 (bitToChurchNat N1) in
    let n2 = times (times c2 c2) (bitToChurchNat N2) in
    let n3 = times (times c2 (times c2 c2)) (bitToChurchNat N3) in
    let n4 = times (times c2 (times c2 (times c2 c2))) (bitToChurchNat N4) in
    let n5 = times (times c2 (times c2 (times c2 (times c2 c2)))) (bitToChurchNat N5) in
    let n6 = times (times c2 (times c2 (times c2 (times c2 (times c2 c2))))) (bitToChurchNat N6) in
    let n7 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2)))))) (bitToChurchNat N7) in
    let n8 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2))))))) (bitToChurchNat N8) in
    let n9 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2)))))))) (bitToChurchNat N9) in
    let n10 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2))))))))) (bitToChurchNat N10) in
    let n11 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2)))))))))) (bitToChurchNat N11) in
    let n12 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2))))))))))) (bitToChurchNat N12) in
    let n13 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2)))))))))))) (bitToChurchNat N13) in
    let n14 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2))))))))))))) (bitToChurchNat N14) in
    let n15 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2)))))))))))))) (bitToChurchNat N15) in
    let n16 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2))))))))))))))) (bitToChurchNat N16) in
    let n17 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2)))))))))))))))) (bitToChurchNat N17) in
    let n18 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2))))))))))))))))) (bitToChurchNat N18) in
    let n19 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2)))))))))))))))))) (bitToChurchNat N19) in
    let n20 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2))))))))))))))))))) (bitToChurchNat N20) in
    let n21 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2)))))))))))))))))))) (bitToChurchNat N21) in
    let n22 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2))))))))))))))))))))) (bitToChurchNat N22) in
    let n23 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2)))))))))))))))))))))) (bitToChurchNat N23) in
    let n24 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2))))))))))))))))))))))) (bitToChurchNat N24) in
    let n25 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2)))))))))))))))))))))))) (bitToChurchNat N25) in
    let n26 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2))))))))))))))))))))))))) (bitToChurchNat N26) in
    let n27 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2)))))))))))))))))))))))))) (bitToChurchNat N27) in
    let n28 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2))))))))))))))))))))))))))) (bitToChurchNat N28) in
    let n29 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2)))))))))))))))))))))))))))) (bitToChurchNat N29) in
    let n30 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2))))))))))))))))))))))))))))) (bitToChurchNat N30) in
    let n31 = times (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 (times c2 c2)))))))))))))))))))))))))))))) (bitToChurchNat N31) in
    plus n0 (plus n1 (plus n2 (plus n3 (plus n4 (plus n5 (plus n6 (plus n7 (plus n8 (plus n9 (plus n10 (plus n11 (plus n12 (plus n13 (plus n14 (plus n15 (plus n16 (plus n17 (plus n18 (plus n19 (plus n20 (plus n21 (plus n22 (plus n23 (plus n24 (plus n25 (plus n26 (plus n27 (plus n28 (plus n29 (plus n30 n31))))))))))))))))))))))))))))))

let dispI32 = \N.
    let N0 = b0I32 N in
    let N1 = b1I32 N in
    let N2 = b2I32 N in
    let N3 = b3I32 N in
    let N4 = b4I32 N in
    let N5 = b5I32 N in
    let N6 = b6I32 N in
    let N7 = b7I32 N in
    let N8 = b8I32 N in
    let N9 = b9I32 N in
    let N10 = b10I32 N in
    let N11 = b11I32 N in
    let N12 = b12I32 N in
    let N13 = b13I32 N in
    let N14 = b14I32 N in
    let N15 = b15I32 N in
    let N16 = b16I32 N in
    let N17 = b17I32 N in
    let N18 = b18I32 N in
    let N19 = b19I32 N in
    let N20 = b20I32 N in
    let N21 = b21I32 N in
    let N22 = b22I32 N in
    let N23 = b23I32 N in
    let N24 = b24I32 N in
    let N25 = b25I32 N in
    let N26 = b26I32 N in
    let N27 = b27I32 N in
    let N28 = b28I32 N in
    let N29 = b29I32 N in
    let N30 = b30I32 N in
    let N31 = b31I32 N in
    (dispBit N31, dispBit N30, dispBit N29, dispBit N28,
     dispBit N27, dispBit N26, dispBit N25, dispBit N24,
     dispBit N23, dispBit N22, dispBit N21, dispBit N20,
     dispBit N19, dispBit N18, dispBit N17, dispBit N16,
     dispBit N15, dispBit N14, dispBit N13, dispBit N12,
     dispBit N11, dispBit N10, dispBit N9, dispBit N8,
     dispBit N7, dispBit N6, dispBit N5, dispBit N4,
     dispBit N3, dispBit N2, dispBit N1, dispBit N0)

let natsToI32 = \b31. \b30. \b29. \b28. \b27. \b26. \b25. \b24. \b23. \b22. \b21. \b20. \b19. \b18. \b17. \b16. \b15. \b14. \b13. \b12. \b11. \b10. \b9. \b8. \b7. \b6. \b5. \b4. \b3. \b2. \b1. \b0.
    \f. f (natToBit b31) (natToBit b30) (natToBit b29) (natToBit b28)
          (natToBit b27) (natToBit b26) (natToBit b25) (natToBit b24)
          (natToBit b23) (natToBit b22) (natToBit b21) (natToBit b20)
          (natToBit b19) (natToBit b18) (natToBit b17) (natToBit b16)
          (natToBit b15) (natToBit b14) (natToBit b13) (natToBit b12)
          (natToBit b11) (natToBit b10) (natToBit b9) (natToBit b8)
          (natToBit b7) (natToBit b6) (natToBit b5) (natToBit b4)
          (natToBit b3) (natToBit b2) (natToBit b1) (natToBit b0)

# 32-bit constants
let i32_0 = natsToI32 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
let i32_10 = natsToI32 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0
let i32_100 = natsToI32 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0
let i32_1000 = natsToI32 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 0
let i32_10000 = natsToI32 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 1 0 0 0 0
let i32_100000 = natsToI32 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0
let i32_1000000 = natsToI32 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 0
let i32_10000000 = natsToI32 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0
let i32_100000000 = natsToI32 0 0 0 0 0 1 0 1 1 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0
let i32_1000000000 = natsToI32 0 0 1 1 1 0 1 1 1 0 0 1 1 0 1 0 1 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0

# Subtraction: A - B (assumes A >= B, no underflow check)
let subI32 = \A. \B.
    let notB = \f. f (not (b31I32 B)) (not (b30I32 B)) (not (b29I32 B)) (not (b28I32 B))
                     (not (b27I32 B)) (not (b26I32 B)) (not (b25I32 B)) (not (b24I32 B))
                     (not (b23I32 B)) (not (b22I32 B)) (not (b21I32 B)) (not (b20I32 B))
                     (not (b19I32 B)) (not (b18I32 B)) (not (b17I32 B)) (not (b16I32 B))
                     (not (b15I32 B)) (not (b14I32 B)) (not (b13I32 B)) (not (b12I32 B))
                     (not (b11I32 B)) (not (b10I32 B)) (not (b9I32 B)) (not (b8I32 B))
                     (not (b7I32 B)) (not (b6I32 B)) (not (b5I32 B)) (not (b4I32 B))
                     (not (b3I32 B)) (not (b2I32 B)) (not (b1I32 B)) (not (b0I32 B)) in
    let negB = fst (cla32 notB i32_0 tru) in
    fst (cla32 A negB fls)

# Compare: A >= B
let geI32 = \A. \B.
    let diff = subI32 A B in
    not (b31I32 diff)  # if MSB is 0, then A >= B (no borrow)

# Repeat subtraction to get quotient and remainder
# divmod N D = (q, r) where N = q*D + r and r < D
let divmodI32 = \N. \D.
    fix (\rec. \n. \q.
        (geI32 n D)
            (rec (subI32 n D) (fst (cla32 q i32_0 tru)))
            (pair q n)
    ) N i32_0

# Convert I32 to 10-digit unsigned decimal (d9 d8 ... d1 d0 where di is Church numeral 0-9)
let i32ToDecimal10 = \N.
    let qr1 = divmodI32 N i32_1000000000 in
    let d9_i32 = fst qr1 in
    let rem1 = snd qr1 in
    let qr2 = divmodI32 rem1 i32_100000000 in
    let d8_i32 = fst qr2 in
    let rem2 = snd qr2 in
    let qr3 = divmodI32 rem2 i32_10000000 in
    let d7_i32 = fst qr3 in
    let rem3 = snd qr3 in
    let qr4 = divmodI32 rem3 i32_1000000 in
    let d6_i32 = fst qr4 in
    let rem4 = snd qr4 in
    let qr5 = divmodI32 rem4 i32_100000 in
    let d5_i32 = fst qr5 in
    let rem5 = snd qr5 in
    let qr6 = divmodI32 rem5 i32_10000 in
    let d4_i32 = fst qr6 in
    let rem6 = snd qr6 in
    let qr7 = divmodI32 rem6 i32_1000 in
    let d3_i32 = fst qr7 in
    let rem7 = snd qr7 in
    let qr8 = divmodI32 rem7 i32_100 in
    let d2_i32 = fst qr8 in
    let rem8 = snd qr8 in
    let qr9 = divmodI32 rem8 i32_10 in
    let d1_i32 = fst qr9 in
    let d0_i32 = snd qr9 in
    let i32ToChurchDecimalDigit = \N.
        let b0 = b0I32 N in
        let b1 = b1I32 N in
        let b2 = b2I32 N in
        let b3 = b3I32 N in
        let t0 = b0 c1 c0 in
        let t1 = b1 c2 c0 in
        let t2 = b2 c4 c0 in
        let t3 = b3 c8 c0 in
        plus t0 (plus t1 (plus t2 t3))
    in
    let d9 = i32ToChurchDecimalDigit d9_i32 in
    let d8 = i32ToChurchDecimalDigit d8_i32 in
    let d7 = i32ToChurchDecimalDigit d7_i32 in
    let d6 = i32ToChurchDecimalDigit d6_i32 in
    let d5 = i32ToChurchDecimalDigit d5_i32 in
    let d4 = i32ToChurchDecimalDigit d4_i32 in
    let d3 = i32ToChurchDecimalDigit d3_i32 in
    let d2 = i32ToChurchDecimalDigit d2_i32 in
    let d1 = i32ToChurchDecimalDigit d1_i32 in
    let d0 = i32ToChurchDecimalDigit d0_i32 in
    \f. f d9 d8 d7 d6 d5 d4 d3 d2 d1 d0
